#!/usr/bin/env node
//
//   Nagios check couchdb 0.2.0 by FreshX Labs / 23.04.2014
//
//   For more info see https://github.com/FreshXOpenSource/check_couchdb
//
//   Usage: check_couchdb [options]
//

var defconf = {
        port: 5984,
        debug: false,
        ssl: false,
        proto: "http",
        urlAuth: "",
        less: false,
        connector: require('http')
    },
    config,
    nopt = require('nopt'),
    types = {
        host: String,
        port: Number,
        ssl: Boolean,
        help: Boolean,
        user: String,
        pass: String,
        debug: Boolean,
        less: Boolean
    },
    shortcuts = {
       'H': ['--host'],
        'P': ['--port'],
        'h': ['--help'],
        'p': ['--pass'],
        'u': ['--user'],
        'd': ['--debug'],
        'l': ['--less']
    },
    argv = nopt(types, shortcuts, process.argv, 2);

function extend(target) {
    var sources = [].slice.call(arguments, 1);
    sources.forEach(function (source) {
        for (var prop in source) {
            target[prop] = source[prop];
        }
    });
    return target;
}     

if(!argv.host) {
        console.log("Usage: check_couchdb   < -H HOSTNAME | --host >  host to connect to\n\
                       [ -h | --help ]           show help ]\n\
                       [ -s | --ssl  ]           enable SSL, default NO ]\n\
                       [ -u | --user USERNAME ]  username to connect with ]\n\
                       [ -p | --pass PASSWORD ]  password to connect with ]\n\
                       [ -P | --port PORT ]      port to connect to, default 5984 (nonssl), 6984 (ssl) ]\n\
                       [ -d | --debug ]          enable debug mode ]\n\
                       [ -l | --less ]           dump less permformance data ]\n");
        process.exit(1);
}

argv.argv=""
config = extend({}, defconf, argv);

if(config.ssl){
    config.proto="https";
    config.connector=require('https')
    if(!argv.port){
       config.port = 6984;
    }
}

function performanceData(json) {
    if (!json || 'error' in json) {
        console.log('ERROR:', json.error);
        process.exit(2);
    }
    
    if (json.couchdb) {
        var couchStat = json.couchdb;
        if(config.debug) console.log(couchStat);
        var httpdStat = json.httpd_status_codes;
        if(config.debug) console.log(httpdStat);
        var statString = "CouchDB ok|";
        var openDBString = 'openDatabases='+        couchStat.open_databases.current;
        var openFileString = ' openFiles='+         couchStat.open_os_files.current;
        var requestTimeString = ' requestTimeAvg='+ couchStat.request_time.mean;
        var err401String=' notAuthorizedRequests='+ httpdStat["401"].sum;
        var err403String=' notAllowedRequests='+    httpdStat["403"].sum;
        var err400String = ' badResponseRequests='+ httpdStat["400"].sum;
        var err200String = ' okRequests='+          httpdStat["200"].sum;

        if(config.less){
           console.log(statString+
                       openDBString+
                       requestTimeString+
                       err401String)
        } else {
           console.log(statString+
                       openDBString+
                       openFileString+
                       requestTimeString+
                       err200String+
                       err401String+
                       err400String+
                       err403String)
        }
        process.exit(0);
    }

    console.log('Uknown:', 'Unknown status: ' + JSON.stringify(json));
    process.exit(3);
}

var options = {
  host: config.host,
  port: config.port,
  path: '/_stats',
};

if(config.user){
  options.headers= {
    'Authorization': 'Basic ' + new Buffer(config.user+ ':' + config.pass).toString('base64')
  }  
}

process.on('uncaughtException', function (err) {
    if(config.debug){
      console.log("Error : "+err);
    } else {
      console.log("Error in "+err.syscall+" : "+err.code);
    }
    process.exit(2);
}); 

request = config.connector.get(options, function(res,err){
  var body = "";
  res.on('error', function(e) {
    console.log("Got error: " + e.message + " / "+e);
  });
  res.on('data', function(data) {
    body += data;
  });
  res.on('end', function() {
    performanceData(JSON.parse(body))
  })
  request.on('response', function(res) {
    console.log('status code: ' + res.statusCode);
  });

});

